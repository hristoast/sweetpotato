{"name":"Sweetpotato","tagline":"Manage your Minecraft server on a GNU/Linux system.","body":"# sweetpotato\r\n-------------\r\n\r\n![sweetpotato logo](http://static.blackholegate.net/i/cyark.jpeg)\r\n\r\n## What is it?\r\n----\r\n\r\n`sweetpotato` is a tool for running a Minecraft server from inside a screen session on a GNU/Linux system. It is written in Python (for Python 3), but with no external Python dependencies (except for the optional WebUI function).\r\n\r\nIt was created as a way to simplify managing a Minecraft server by providing a simple wrapper for common tasks. It knows what your world is and where its files are via command-line options, values set in a configuration file, or a mixture of both!\r\n\r\n## Installation\r\n\r\nInstallation is simple: git clone this repo to wherever you want it, then create a symbolic link to wherever you want it.\r\n\r\n    $ ln -s $HOME/src/sweetpotato/sweetpotato.py $HOME/bin/sweetpotato\r\n\r\n## Issues\r\n\r\nI am sure there may be actual bugs and unintended problems in here, but this section is for known issues relating to design decisions. Things that happen, things `sweetpotato` can or can't do - things like that.\r\n\r\n  * `sweetpotato` is very careful in may ways, but it will not keep your settings straight for you. Meaning, you must take care to ensure the directories you configure for backups, servers, and so forth are where you really want these things to be.\r\n\r\n  * At present `sweetpotato` has no way of validating the screen you have chosen. This means that if you have two servers running on the same machine, and you give them both the same screen name, `sweetpotato` is not going to be able to do anything about it and unexpected things will happen!\r\n\r\n  * The WebUI includes no extra security whatsoever. This is deliberate, any decent HTTP server has a way of providing SSL and authentication functions for you.\r\n\r\n## Usage\r\n----\r\n\r\n### Create Server\r\n\r\nCreate the configured server_dir, download the server jar for the configured mc_version, then generate a `server.properties` and agreed-to `eula.txt` file.\r\n\r\n    $ sweetpotato -d /srv/backups/minecraft -s /srv/minecraft/mc_server -gb 1 1 --create\r\n    [create] Creating \"SweetpotatoWorld\" ...\r\n    [create] Creating /srv/backups/minecraft ... Done!\r\n    [create] Creating /srv/minecraft/mc_server ... Done!\r\n    [create] Downloading minecraft_server.1.8.jar ... Done!\r\n    [create] Agreeing to the eula ... Done!\r\n    [create] Generating server.properties ... Done!\r\n    [create] World \"SweetpotatoWorld\" has been created!\r\n\r\nIf you change a setting, like port number, the necessary files are regenerated\r\n\r\n    $ sweetpotato -d /srv/backups/minecraft -s /srv/minecraft/mc_server -gb 1 1 --port 25569 --create\r\n    [create] Creating \"SweetpotatoWorld\" ...\r\n    [create] Found /srv/backups/minecraft!\r\n    [create] Found /srv/minecraft/mc_server!\r\n    [create] Found minecraft_server.1.8.jar!\r\n    [create] Eula agreed to!\r\n    [create] Generating server.properties ... Done!\r\n    [create] World \"SweetpotatoWorld\" has been created!\r\n\r\nBeware when changing values! You can end up with a lost screen name, world name, or some other lost thing that I haven't yet ran into or conceived.\r\n\r\nSuch a scenario will produce unexpected results - you have been warned to keep track of your configs!\r\n\r\n### Generating A Conf File\r\n\r\nIt is possible to print a conf file based on passed-in settings to the stdout:\r\n\r\n    $ sweetpotato -d /srv/backups/minecraft -s /srv/minecraft/mc_server -gb 1 1 --genconf\r\n    ## Generated by sweetpotato at Mon Oct 20 15:31:24 2014\r\n    [Settings]\r\n    server_dir: /srv/minecraft/mc_server\r\n    mem_format: GB\r\n    backup_dir: /srv/backups/minecraft\r\n    mem_max: 1\r\n    compression: gz\r\n    mem_min: 1\r\n\r\nYou can create your own file like this:\r\n\r\n    $ sweetpotato -d /srv/backups/minecraft -s /srv/minecraft/mc_server -gb 1 1 --genconf > myconf.conf\r\n    $ sweetpotato -c myconf.conf --json\r\n    {\r\n        \"backup_dir\": \"/srv/backups/minecraft\",\r\n        \"compression\": \"gz\",\r\n        \"conf_file\": null,\r\n        \"force\": false,\r\n        \"forge\": null,\r\n        \"level_seed\": null,\r\n        \"mc_version\": \"1.8\",\r\n        \"mem_format\": \"GB\",\r\n        \"mem_max\": \"1\",\r\n        \"mem_min\": \"1\",\r\n        \"port\": \"25565\",\r\n        \"running\": [\r\n            \"/srv/minecraft/mc_server\",\r\n            \"/usr/bin/java\",\r\n            \"30900\"\r\n        ],\r\n        \"screen_name\": \"SweetpotatoWorld\",\r\n        \"server_dir\": \"/srv/minecraft/mc_server\",\r\n        \"world_name\": \"SweetpotatoWorld\"\r\n    }\r\n\r\n\r\n\r\nYou can also make your settings the default (so you don't have to pass a conf file or command-line args) by writing them to the default conf file location, which is \r\n`$HOME/.config/sweetpotato/sweetpotato.conf`:\r\n\r\n    $ sweetpotato -d /srv/backups/minecraft -s /srv/minecraft/mc_server -gb 1 1 --genconf > $HOME/.config/sweetpotato/sweetpotato.conf\r\n    $ sweetpotato --json\r\n    {\r\n        \"backup_dir\": \"/srv/backups/minecraft\",\r\n        \"compression\": \"gz\",\r\n        \"conf_file\": null,\r\n        \"force\": false,\r\n        \"forge\": null,\r\n        \"level_seed\": null,\r\n        \"mc_version\": \"1.8\",\r\n        \"mem_format\": \"GB\",\r\n        \"mem_max\": \"1\",\r\n        \"mem_min\": \"1\",\r\n        \"port\": \"25565\",\r\n        \"running\": false,\r\n        \"screen_name\": \"SweetpotatoWorld\",\r\n        \"server_dir\": \"/srv/minecraft/mc_server\",\r\n        \"world_name\": \"SweetpotatoWorld\"\r\n    }\r\n\r\n\r\n### Live Backup\r\n\r\nRun a backup while the server is running. This sends a message to the in-game chat when the backup starts and finishes, then creates a backup of your configured world\r\n\r\n    $ sweetpotato -d /srv/backups/minecraft -s /srv/minecraft/mc_server -gb 1 1 --backup\r\n    [live-backup] Running live backup of \"SweetpotatoWorld\"  ... Done!\r\n\r\nBut the backup will not be ran if the file (named after today's date) already exists:\r\n\r\n    $ sweetpotato -d /srv/backups/minecraft -s /srv/minecraft/mc_server -gb 1 1 --backup\r\n    [live-backup] Running live backup of \"SweetpotatoWorld\"  ... FATAL: File \"/srv/backups/minecraft/2014-10-20_SweetpotatoWorld.tar.gz\" already exists!\r\n\r\n### Offline Backup\r\n\r\nEnsure that the server is shut down before backing up. Once completed (or errored out) the server will be restarted:\r\n\r\n    $ sweetpotato --offline\r\n    [offline-backup]  Stopping \"SweetpotatoWorld\" ... backing up ... starting \"SweetpotatoWorld\" ... Done!\r\n\r\nAs with the live backup, this will not be ran if the file (named after today's date) already exists:\r\n\r\n    $ sweetpotato --offline\r\n    [offline-backup]  Stopping \"SweetpotatoWorld\" ... backing up ... starting \"SweetpotatoWorld\" ... Done!\r\n    FATAL: File \"/srv/backups/minecraft/2014-10-20_SweetpotatoWorld.tar.gz\" already exists!\r\n\r\n### Restart\r\n\r\n    $ sweetpotato --restart\r\n    [restart] Restarting SweetpotatoWorld ... Done!\r\n\r\nIf the configured world is not running, is is started.\r\n\r\n    $ sweetpotato --restart\r\n    [restart] Starting SweetpotatoWorld ... Done!\r\n\r\n### Start\r\n\r\n    $ sweetpotato --start\r\n    [start] Starting \"SweetpotatoWorld\" ... Done!\r\n\r\nFails if the configured world is already running.\r\n\r\n    $ sweetpotato --start\r\n    FATAL: World \"SweetpotatoWorld\" already running with PID 30320\r\n\r\n### Stop\r\n\r\n    $ sweetpotato --stop\r\n    [stop] Stopping \"SweetpotatoWorld\" ... Done!\r\n\r\nFails if the configured world is not running.\r\n\r\n    $ sweetpotato --stop\r\n    FATAL: Cannot stop \"SweetpotatoWorld\" - it is not running!\r\n\r\n### WebUI\r\n\r\nThis feature is experimental.\r\n\r\n    $ sweetpotato --web\r\n    Bottle v0.12.7 server starting up (using WSGIRefServer())...\r\n    Listening on http://127.0.0.1:8080/\r\n    Hit Ctrl-C to quit.\r\n\r\nAs the output says, after launching you can then fire up the WebUI in your favorite browser at http://127.0.0.1:8080/.\r\n\r\n## Mod (Forge) support\r\n----\r\n\r\nTODO\r\n\r\n## Installation\r\n----\r\n\r\nTODO\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}